name: 'Release v2'

on:
  push:
    tags:
      - 'v*'

  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf build-essential curl wget libssl-dev gobject-2.0 libsoup-3.0-dev libjavascriptcoregtk-4.1-dev libglib2.0-dev libgtk-3-dev

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest tag
        id: get-latest-tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        with:
          semver_only: true

      - name: Fix get latest tag
        id: fix-get-latest-tag
        run: |
          echo "current_version=`cut -c2- <<< "${{ steps.get-latest-tag.outputs.tag }}"`" >> $GITHUB_OUTPUT

      - name: Read the changelog
        id: read-the-changelog
        uses: 3liz/changelog-release@0.2.0
        with:
          tag_name: ${{ steps.fix-get-latest-tag.outputs.current_version }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install frontend dependencies
        run: npm install

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'SMTP Client v__VERSION__'
          releaseBody: ${{ steps.read-the-changelog.outputs.markdown }}
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
